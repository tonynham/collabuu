import { Router } from 'express';
import { SupabaseClient } from '@supabase/supabase-js';
export declare class BusinessRouter {
    router: Router;
    private campaignService;
    private visitService;
    private userService;
    private conversationService;
    private loyaltyService;
    constructor(supabaseClient?: SupabaseClient);
    private setupRoutes;
    private registerBusiness;
    private loginBusiness;
    private getBusinessProfile;
    private updateBusinessProfile;
    private uploadLogo;
    private getProfileCompletionStatus;
    private updateSocialMedia;
    private updateBusinessDetails;
    private updateVisibility;
    private getCategories;
    private validateProfile;
    private getValidationRequirements;
    private validateField;
    private getProfileSuggestions;
    private getBusinessCampaigns;
    private createCampaign;
    private getCampaignDetails;
    private updateCampaign;
    private deleteCampaign;
    private updateCampaignStatus;
    private getCampaignMetrics;
    private getCampaignParticipants;
    private getCampaignApplications;
    private acceptApplication;
    private rejectApplication;
    private inviteInfluencer;
    private verifyVisit;
    private getVisits;
    private approveVisit;
    private rejectVisit;
    private getVisitStats;
    private getConversations;
    private getConversationByCampaign;
    private getMessages;
    private sendMessage;
    private markConversationRead;
    private getConversationCampaignStatus;
    private messageParticipant;
    private scanRewardQR;
    private validateReward;
    private getRewardRedemptions;
    private getPendingRewardRedemptions;
    private completeRewardRedemption;
    private getDashboardAnalytics;
    private getCampaignAnalytics;
    private getInfluencerAnalytics;
    private getVisitorAnalytics;
    private connectGmb;
    private syncGmb;
    private disconnectGmb;
    private getGmbStatus;
    private searchGmb;
    private verifyGmbOwnership;
    private getGmbLocations;
    private selectGmbLocation;
    private getGmbPhotos;
    private getGmbReviews;
    private getGmbHours;
    private getGmbAttributes;
    private importGmbProfile;
    private getCampaignContent;
    private getCampaignContentAnalytics;
    private getContentPerformance;
    private approveContent;
    private rejectContent;
    private scheduleMediaEvent;
    private getCreditPool;
    private getLoyaltyRewardCampaigns;
    private getCampaignRedemptions;
    private listInfluencers;
    private getPendingApplications;
    private getCampaignInvites;
    private updateCampaignInviteStatus;
    private listTeamMembers;
    private inviteTeamMember;
    private removeTeamMember;
    private updateTeamMemberRole;
    private updateTeamMemberStatus;
    private getTeamInvitations;
    private getTeamRoles;
    private setTeamMemberPermissions;
    private getCreditBalance;
    private getCreditPackages;
    private purchaseCredit;
    private getCreditTransactions;
    private processPayment;
    private getPaymentMethods;
    private addPaymentMethod;
    private removePaymentMethod;
    private getInvoices;
    private submitBusinessVerification;
    private getBusinessVerificationStatus;
    private uploadVerificationDocuments;
    private getVerificationRequirements;
    private pauseCampaign;
    private resumeCampaign;
    private duplicateCampaign;
    private validateManualScan;
    private validateScanResult;
    private getRecentVisits;
    private getPendingVisits;
    private getDetailedCampaignMetrics;
    private getCampaignTrafficData;
    private getCampaignEngagementStats;
    private getCampaignRoi;
    private getCampaignTimeline;
    private getDetailedParticipants;
    private getParticipantPerformance;
    private updateParticipantStatus;
    private createCampaignDraft;
    private getCampaignTemplates;
    private uploadCampaignImage;
    private validateCampaignSettings;
    private getAvailableInfluencers;
    private searchInfluencers;
    private getInfluencerProfile;
    private getInfluencerPortfolio;
    private getInfluencerCampaignHistory;
    private preValidateQrCode;
    private getScanDetails;
    private reportScanIssue;
    private getScanHistory;
    private addVisitNotes;
}
